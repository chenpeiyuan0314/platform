<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yuan.project.platform.mapper.ClientMapper">
  <resultMap id="BaseResultMap" type="org.yuan.project.platform.entity.Client">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, phone, create_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from client
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.yuan.project.platform.entity.Client">
    insert into client (id, username, password, 
      phone, create_date)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, 
      #{phone,jdbcType=CHAR}, #{createDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.yuan.project.platform.entity.Client">
    insert into client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.yuan.project.platform.entity.Client">
    update client
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yuan.project.platform.entity.Client">
    update client
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      phone = #{phone,jdbcType=CHAR},
      create_date = #{createDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.yuan.project.platform.entity.Client">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="phone" jdbcType="CHAR" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, phone
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from client
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from client
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.yuan.project.platform.entity.Client">
    insert into client (id, username, password,
    phone)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
    #{password,jdbcType=CHAR},
    #{phone,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.yuan.project.platform.entity.Client">
    insert into client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.yuan.project.platform.entity.Client">
    update client
    <set>
      <if test="username != null">
        username =
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password =
        #{password,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yuan.project.platform.entity.Client">
    update client
    set username = #{username,jdbcType=VARCHAR},
    password = #{password,jdbcType=CHAR},
    phone = #{phone,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 手动添加代码-->
  
  <!-- 
            根据条件查询记录总数
   -->
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT
      COUNT(1)
    FROM client
    <where>
      <if test="phone != null">
        AND phone = #{phone}
      </if>
    </where>
  </select>
  
  <!-- 
           根据条件查询唯一记录
   -->
  <select id="selectSole" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT
      <include refid="Base_Column_List" />
    FROM client
    <where>
      <if test="phone != null">
        AND phone = #{phone}
      </if>
      <if test="password != null">
        AND password = #{password}
      </if>
    </where>
  </select>
  
</mapper>